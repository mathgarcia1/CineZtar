// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositorio.Models;

namespace Repositorio.Migrations
{
    [DbContext(typeof(DB_Ingressos2Context))]
    [Migration("20230523124600_Migracao1")]
    partial class Migracao1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Latin1_General_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Repositorio.Models.Compra", b =>
                {
                    b.Property<int>("IdCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_compra")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime")
                        .HasColumnName("data");

                    b.Property<string>("IdPreferencia")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("id_preferencia");

                    b.Property<int?>("IdStatus")
                        .HasColumnType("int")
                        .HasColumnName("id_status");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("url");

                    b.Property<decimal?>("Valor")
                        .HasColumnType("decimal(8,2)")
                        .HasColumnName("valor");

                    b.HasKey("IdCompra")
                        .HasName("PK_Carrinho");

                    b.ToTable("Compra");
                });

            modelBuilder.Entity("Repositorio.Models.CompraFilme", b =>
                {
                    b.Property<int>("IdCompraFilme")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_compra_filme")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdCompra")
                        .HasColumnType("int")
                        .HasColumnName("id_compra");

                    b.Property<int?>("IdFilme")
                        .HasColumnType("int")
                        .HasColumnName("id_filme");

                    b.Property<int?>("Quantidade")
                        .HasColumnType("int")
                        .HasColumnName("quantidade");

                    b.Property<decimal?>("Valor")
                        .HasColumnType("decimal(8,2)")
                        .HasColumnName("valor");

                    b.HasKey("IdCompraFilme")
                        .HasName("PK_Compra_Filme");

                    b.HasIndex("IdCompra");

                    b.HasIndex("IdFilme");

                    b.ToTable("Compra_Filme");
                });

            modelBuilder.Entity("Repositorio.Models.Filme", b =>
                {
                    b.Property<int>("IdFilme")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_filme")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AnoLancamento")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("ano_lancamento");

                    b.Property<string>("Descricao")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descricao");

                    b.Property<int?>("Duracao")
                        .HasColumnType("int")
                        .HasColumnName("duracao");

                    b.Property<int?>("IdGenero")
                        .HasColumnType("int")
                        .HasColumnName("id_genero");

                    b.Property<int?>("IdIdioma")
                        .HasColumnType("int")
                        .HasColumnName("id_idioma");

                    b.Property<string>("Imagem")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("imagem");

                    b.Property<string>("Nome")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nome");

                    b.Property<decimal?>("Valor")
                        .HasColumnType("decimal(8,2)")
                        .HasColumnName("valor");

                    b.HasKey("IdFilme");

                    b.HasIndex("IdGenero");

                    b.HasIndex("IdIdioma");

                    b.ToTable("Filme");
                });

            modelBuilder.Entity("Repositorio.Models.Genero", b =>
                {
                    b.Property<int>("IdGenero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_genero")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descricao");

                    b.Property<string>("Nome")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nome");

                    b.HasKey("IdGenero");

                    b.ToTable("Genero");
                });

            modelBuilder.Entity("Repositorio.Models.Idioma", b =>
                {
                    b.Property<int>("IdIdioma")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_idioma")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nome");

                    b.HasKey("IdIdioma");

                    b.ToTable("Idioma");
                });

            modelBuilder.Entity("Repositorio.Models.StatusCompra", b =>
                {
                    b.Property<int>("IdStatus")
                        .HasColumnType("int")
                        .HasColumnName("id_status");

                    b.Property<string>("Descricao")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("descricao");

                    b.HasKey("IdStatus");

                    b.ToTable("Status_Compra");
                });

            modelBuilder.Entity("Repositorio.Models.TipoUsuario", b =>
                {
                    b.Property<int>("IdTipousuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_tipousuario")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descricao");

                    b.HasKey("IdTipousuario");

                    b.ToTable("Tipo_Usuario");
                });

            modelBuilder.Entity("Repositorio.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_usuario")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<int>("IdTipousuario")
                        .HasColumnType("int")
                        .HasColumnName("id_tipousuario");

                    b.Property<string>("Nome")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nome");

                    b.Property<string>("Senha")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("senha");

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdTipousuario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Repositorio.Models.CompraFilme", b =>
                {
                    b.HasOne("Repositorio.Models.Compra", "IdCompraNavigation")
                        .WithMany("CompraFilmes")
                        .HasForeignKey("IdCompra")
                        .HasConstraintName("FK_CompraFilme_Compra");

                    b.HasOne("Repositorio.Models.Filme", "IdFilmeNavigation")
                        .WithMany("CompraFilmes")
                        .HasForeignKey("IdFilme")
                        .HasConstraintName("FK_CompraFilme_Filme");

                    b.Navigation("IdCompraNavigation");

                    b.Navigation("IdFilmeNavigation");
                });

            modelBuilder.Entity("Repositorio.Models.Filme", b =>
                {
                    b.HasOne("Repositorio.Models.Genero", "IdGeneroNavigation")
                        .WithMany("Filmes")
                        .HasForeignKey("IdGenero")
                        .HasConstraintName("FK_Filme_Genero");

                    b.HasOne("Repositorio.Models.Idioma", "IdIdiomaNavigation")
                        .WithMany("Filmes")
                        .HasForeignKey("IdIdioma")
                        .HasConstraintName("FK_Filme_Idioma");

                    b.Navigation("IdGeneroNavigation");

                    b.Navigation("IdIdiomaNavigation");
                });

            modelBuilder.Entity("Repositorio.Models.Usuario", b =>
                {
                    b.HasOne("Repositorio.Models.TipoUsuario", "IdTipousuarioNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdTipousuario")
                        .HasConstraintName("FK_Usuario_Tipo_Usuario")
                        .IsRequired();

                    b.Navigation("IdTipousuarioNavigation");
                });

            modelBuilder.Entity("Repositorio.Models.Compra", b =>
                {
                    b.Navigation("CompraFilmes");
                });

            modelBuilder.Entity("Repositorio.Models.Filme", b =>
                {
                    b.Navigation("CompraFilmes");
                });

            modelBuilder.Entity("Repositorio.Models.Genero", b =>
                {
                    b.Navigation("Filmes");
                });

            modelBuilder.Entity("Repositorio.Models.Idioma", b =>
                {
                    b.Navigation("Filmes");
                });

            modelBuilder.Entity("Repositorio.Models.TipoUsuario", b =>
                {
                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
